networks:
  translation_service:
    driver: bridge

services:
  # Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      - CONTAINER_ROLE=app
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=translation_service
      - DB_USERNAME=sail
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
      - SESSION_DRIVER=redis
    volumes:
      - .:/var/www/html
    networks:
      - translation_service
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Queue Worker Service
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: php artisan queue:work --sleep=3 --tries=3
    env_file:
      - ./.env
    environment:
      - CONTAINER_ROLE=worker
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=translation_service
      - DB_USERNAME=sail
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
      - SESSION_DRIVER=redis
    volumes:
      - .:/var/www/html
    networks:
      - translation_service
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  # MySQL Database Service
  mysql:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: translation_service
      MYSQL_USER: sail
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - translation_service
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-u", "root", "-psecret", "-e", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Service
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis:/data
    networks:
      - translation_service
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql:
    driver: local
  redis:
    driver: local